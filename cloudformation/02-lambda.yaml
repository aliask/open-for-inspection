AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  BucketName:
    Type: String
    Default: ""
  ZipName:
    Type: String
    Default: ""
Resources:
  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "GitleaksExecution"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogStream"
                  - "logs:CreateLogGroup"
                  - "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"
              - Effect: "Allow"
                Action:
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                Resource:
                  - !Sub 'arn:aws:s3:::${ResultBucket}/*'

  ResultBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub 'gitleaks-results-${AWS::AccountId}-${AWS::Region}'

  LambdaLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub "/aws/lambda/${GitleaksLambdaFunction}"
      RetentionInDays: 7

  GitleaksLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Architectures:
        - x86_64
      Handler: 'gitleaks.lambda_handler'
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref BucketName
        S3Key: !Ref ZipName
      Runtime: 'python3.12'
      MemorySize: 512
      Timeout: 300
      Environment:
        Variables:
          DESTINATION_BUCKET: !Ref ResultBucket

Outputs:
  LambdaFunctionArn:
    Description: 'Lambda Function ARN'
    Value: !GetAtt GitleaksLambdaFunction.Arn
